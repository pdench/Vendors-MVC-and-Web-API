@model PagedList.IPagedList<VendorTest2.Models.Vendor>

@using PagedList.Mvc;

@{
    ViewBag.Title = "Vendor List";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<div class="container">
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <tr>
                <th>
                    @Html.ActionLink("Vendor Code", "Index", new { sortOrder = "VendorCode", currentSort = ViewBag.currentSort, sortDir = ViewBag.sortDir, mode = "Sort" })
                </th>
                <th>
                    @Html.ActionLink("Vendor Name", "Index", new { sortOrder = "VendorName", currentSort = ViewBag.currentSort, sortDir = ViewBag.sortDir, mode = "Sort" })
                </th>
                <th>
                    @Html.ActionLink("Valid From", "Index", new { sortOrder = "ValidFrom", currentSort = ViewBag.currentSort, sortDir = ViewBag.sortDir, mode = "Sort" })
                </th>
                <th>
                    @Html.ActionLink("Valid Thru", "Index", new { sortOrder = "ValidThru", currentSort = ViewBag.currentSort, sortDir = ViewBag.sortDir, mode = "Sort" })
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.VendorCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.VendorName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ValidFrom)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ValidThru)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }

        </table>
        <br />
        <div id='Paging' style="text-align:center">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
            of @Model.PageCount

            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.currentSort, currentSort = ViewBag.currentSort, sortDir = ViewBag.sortDir, mode="Page" }))
        </div>
</div>
</div>